{"version":3,"sources":["reducers/menuReducer.js","reducers/contactsReducer.js","reducers/reducers.js","constants/actionTypes.js","store/configureStore.js","store/localStorage.js","serviceWorker.js","actions/menuActions.js","components/Menu/Menu.js","components/Menu/MenuContainer.js","components/Header/Header.js","components/Content/Content.js","components/Footer/Footer.js","components/App/AppContainer.js","components/Main/Main.js","components/About/About.js","actions/sizeActions.js","components/Contacts/Contacts.js","components/Contacts/ContactsContainer.js","routes.js","index.js"],"names":["initialState","showMenu","reducers","combineReducers","routing","routerReducer","menu","state","arguments","length","undefined","action","type","Object","objectSpread","payload","contacts","radialMenu","center","image","items","href","duration","stagger","itemsSize","window","innerHeight","innerWidth","distance","configureStore","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","subscribe","throttle","stringify","setItem","_unused","saveState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","openMenu","closeMenu","Menu","props","react_default","a","createElement","className","HamburgerMenu_default","isOpen","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","cheeseburger_menu_default","closeCallback","react_router_es","to","onClick","src","alt","connect","dispatch","bindActionCreators","components_Menu_Menu","Header","Menu_MenuContainer","align","Content","children","Footer","AppContainer","_this","this","path","ownProps","pathname","refresh","forceUpdate","components_Header_Header","components_Content_Content","components_Footer_Footer","Component","childContextTypes","PropTypes","string","isRequired","func","Main","About","changeSize","Contacts","resize","addEventListener","removeEventListener","dist_default","components_Contacts_Contacts","routes","component","ContactsContainer","history","syncHistoryWithStore","browserHistory","URL","process","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","es","BrowserRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e2b5282.chunk.js","sourcesContent":["import * as types from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    showMenu: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.OPEN_MENU_TYPE: {\r\n            return {\r\n                ...state,\r\n                showMenu: action.payload\r\n            };\r\n        }\r\n        case types.CLOSE_MENU_TYPE: {\r\n            return {\r\n                ...state,\r\n                showMenu: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","function getItemsSize() {\r\n    if (window.innerHeight / window.innerWidth > 1) {\r\n        return window.innerWidth / 10;\r\n    } else {\r\n        return window.innerHeight / 10;\r\n    }\r\n}\r\n\r\nfunction getDistance() {\r\n    if (window.innerHeight / window.innerWidth > 1) {\r\n        return window.innerWidth / 10;\r\n    } else {\r\n        return window.innerHeight / 10;\r\n    }\r\n}\r\n\r\nexport default function () {\r\n    return {\r\n        radialMenu: {\r\n            center: {\"image\": \"url(./image/share.png)\"},\r\n            items: [\r\n                {\"href\": \"https://github.com/qThegamEp\", \"image\": \"url(./image/github.png)\"},\r\n                {\"href\": \"https://www.facebook.com/koliadin.nikita\", \"image\": \"url(./image/facebook.png)\"},\r\n                {\"href\": \"https://javarush.ru/users/1324097\", \"image\": \"url(./image/javarush.png)\"},\r\n                {\"href\": \"https://www.instagram.com/koliadin_nik/\", \"image\": \"url(./image/instagram.png)\"},\r\n                {\"href\": \"https://www.linkedin.com/in/nikita-koliadin-b24361174/\", \"image\": \"url(./image/linkedin.png)\"}\r\n            ],\r\n            duration: 400,\r\n            stagger: 50,\r\n            itemsSize: getItemsSize(),\r\n            distance: getDistance()\r\n        }\r\n    };\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {routerReducer} from 'react-router-redux';\r\n\r\nimport menuReducer from './menuReducer';\r\nimport contactsReducer from './contactsReducer';\r\n\r\nconst reducers = combineReducers({\r\n    routing: routerReducer,\r\n    menu: menuReducer,\r\n    contacts: contactsReducer\r\n});\r\n\r\nexport default reducers;\r\n","export const OPEN_MENU_TYPE = \"OPEN_MENU_TYPE\";\r\nexport const CLOSE_MENU_TYPE = \"CLOSE_MENU_TYPE\";\r\nexport const CHANGE_SIZE_TYPE = \"CHANGE_SIZE_TYPE\";\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport {loadState, saveState} from './localStorage';\r\nimport reducers from '../reducers/reducers';\r\n\r\nconst configureStore = () => {\r\n    const persistedState = loadState();\r\n    const store = createStore(reducers, persistedState, composeWithDevTools(applyMiddleware(thunk, logger)));\r\n    store.subscribe(throttle(() => {\r\n        saveState({});\r\n    }, 1000));\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (module.hot) {\r\n            module.hot.accept(\"../reducers/reducers\", () => {\r\n                store.replaceReducer(reducers);\r\n            });\r\n        }\r\n    }\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"state\");\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                        \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as types from '../constants/actionTypes';\r\n\r\nexport const openMenu = () => {\r\n    return {\r\n        type: types.OPEN_MENU_TYPE,\r\n        payload: true\r\n    };\r\n};\r\n\r\nexport const closeMenu = () => {\r\n    return {\r\n        type: types.CLOSE_MENU_TYPE,\r\n        payload: false\r\n    };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router';\r\nimport HamburgerMenu from 'react-hamburger-menu';\r\nimport CheeseburgerMenu from 'cheeseburger-menu';\r\n\r\nconst Menu = props => {\r\n    const {menu, openMenu, closeMenu} = props;\r\n    return (\r\n        <div className=\"Menu\">\r\n            <HamburgerMenu\r\n                isOpen={menu.showMenu}\r\n                menuClicked={() => openMenu()}\r\n                width={32}\r\n                height={24}\r\n                strokeWidth={3}\r\n                rotate={0}\r\n                color=\"black\"\r\n                borderRadius={0}\r\n                animationDuration={0.5}\r\n            />\r\n            <CheeseburgerMenu\r\n                isOpen={menu.showMenu}\r\n                closeCallback={() => closeMenu()}>\r\n                <div className=\"List\">\r\n                    <div className=\"Item\">\r\n                        <Link to=\"/main\"\r\n                              onClick={() => closeMenu()}>\r\n                            Main\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"Item\">\r\n                        <Link to=\"/about\"\r\n                              onClick={() => closeMenu()}>\r\n                            About\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"Item\">\r\n                        <Link to=\"/contacts\"\r\n                              onClick={() => closeMenu()}>\r\n                            Contacts\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"Logo\">\r\n                        <img className=\"Image\" src=\"./image/header.gif\" alt=\"gif\"/>\r\n                    </div>\r\n                </div>\r\n            </CheeseburgerMenu>\r\n        </div>\r\n    );\r\n};\r\n\r\nMenu.propTypes = {\r\n    menu: PropTypes.object.isRequired,\r\n    openMenu: PropTypes.func.isRequired,\r\n    closeMenu: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {openMenu, closeMenu} from '../../actions/menuActions';\r\nimport Menu from './Menu';\r\n\r\nconst MenuContainer = props => {\r\n    const {menu, openMenu, closeMenu} = props;\r\n    return (\r\n        <Menu menu={menu}\r\n              openMenu={openMenu}\r\n              closeMenu={closeMenu}\r\n        />\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        menu: state.menu\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        openMenu: openMenu,\r\n        closeMenu: closeMenu\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuContainer);\r\n","import React from 'react';\r\n\r\nimport MenuContainer from '../Menu/MenuContainer';\r\n\r\nconst Header = () => (\r\n    <div className=\"Header\">\r\n        <MenuContainer/>\r\n        <div className=\"Logo\">\r\n            <img className=\"Image\" src=\"./image/header.gif\" align=\"left\" alt=\"gif\"/>\r\n            <span className=\"Text\">\r\n\t\t\t\tUniversity App\r\n\t\t\t</span>\r\n            <img className=\"Image\" src=\"./image/header.gif\" align=\"right\" alt=\"gif\"/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Content = props => (\r\n    <div className=\"Content\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nContent.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <div className=\"Footer\">\r\n        <span className=\"Text\">University App</span>\r\n        <span className=\"Text\">© qThegamEp, 2019</span>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from '../Header/Header';\r\nimport Content from '../Content/Content';\r\nimport Footer from '../Footer/Footer';\r\n\r\nclass AppContainer extends Component {\r\n\r\n    getChildContext() {\r\n        return {\r\n            path: this.props.ownProps.location.pathname,\r\n            refresh: () => this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header/>\r\n                <Content>{this.props.children}</Content>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAppContainer.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nAppContainer.childContextTypes = {\r\n    path: PropTypes.string.isRequired,\r\n    refresh: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        ownProps: ownProps\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppContainer);\r\n","import React from 'react';\r\n\r\nconst Main = () => (\r\n    <div>MAIN</div>\r\n);\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst About = () => (\r\n    <span>ABOUT</span>\r\n);\r\n\r\nexport default About;\r\n","import * as types from '../constants/actionTypes';\r\n\r\nexport const changeSize = () => {\r\n    return {\r\n        type: types.CHANGE_SIZE_TYPE\r\n    };\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RadialMenu from 'react-radial-menu';\r\n\r\nclass Contacts extends Component {\r\n\r\n    resize = () => {\r\n        const {changeSize} = this.props;\r\n        changeSize();\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n\r\n    render() {\r\n        const {contacts} = this.props;\r\n        return (\r\n            <div className=\"Contacts\">\r\n                <RadialMenu\r\n                    center={contacts.radialMenu.center}\r\n                    items={contacts.radialMenu.items}\r\n                    duration={contacts.radialMenu.duration}\r\n                    stagger={contacts.radialMenu.stagger}\r\n                    itemsSize={contacts.radialMenu.itemsSize}\r\n                    distance={contacts.radialMenu.distance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.object.isRequired,\r\n    changeSize: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {changeSize} from '../../actions/sizeActions';\r\nimport Contacts from './Contacts';\r\n\r\nconst ContactsContainer = props => {\r\n    const {contacts, changeSize} = props;\r\n    return (\r\n        <Contacts contacts={contacts}\r\n                  changeSize={changeSize}\r\n        />\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contacts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        changeSize: changeSize\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsContainer);\r\n","import React from 'react';\r\nimport {Route, IndexRedirect} from 'react-router';\r\n\r\nimport AppContainer from './components/App/AppContainer';\r\nimport Main from './components/Main/Main';\r\nimport About from './components/About/About';\r\nimport ContactsContainer from './components/Contacts/ContactsContainer';\r\n\r\nexport default (\r\n    <Route path=\"/\" component={AppContainer}>\r\n        <IndexRedirect to=\"main\"/>\r\n        <Route path=\"/main\" component={Main}/>\r\n        <Route path=\"/about\" component={About}/>\r\n        <Route path=\"/contacts\" component={ContactsContainer}/>\r\n        <Route path=\"*\" component={Main}/>\r\n    </Route>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {syncHistoryWithStore} from 'react-router-redux';\r\nimport {browserHistory, Router} from 'react-router';\r\n\r\nimport configureStore from './store/configureStore';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport routes from './routes';\r\n\r\nconst store = configureStore();\r\nconst history = syncHistoryWithStore(browserHistory, store);\r\n\r\nserviceWorker.register();\r\n\r\nconst component = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Router history={history}>\r\n                {routes}\r\n            </Router>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(component, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}